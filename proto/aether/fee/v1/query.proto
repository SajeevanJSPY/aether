syntax = "proto3";
package aether.fee.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/aether-proj/aether/x/fee/types";

service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse);
  rpc TotalFeeCollected(QueryTotalFeeCollectedRequest) returns (QueryTotalFeeCollectedResponse);
}

message QueryParamsRequest {}
message QueryParamsResponse {
  string trader_fee_percentage = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];

  string protocol_fee_percentage = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];

  string lp_fee_percentage = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];
}

message QueryTotalFeeCollectedRequest {}
message QueryTotalFeeCollectedResponse {
  string collected_fees = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];
}

